{"version":3,"sources":["Calc.js","reportWebVitals.js","index.js"],"names":["axios","defaults","headers","post","Calc","useState","currentCalc","setCurrentCalc","previousCalc","setPreviousCalc","handleSend","a","calculus","result","data","response","statusCode","alert","message","addChar","char","className","Helmet","name","content","Container","Row","Col","Card","style","width","centered","Body","Text","Form","Control","type","value","readOnly","xs","Button","onClick","variant","slice","xmlns","height","fill","viewBox","fillRule","d","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAOAA,IAAMC,SAASC,QAAQC,KAAK,gBAAkB,mBAC9C,IA2GeC,EAxGF,WAEX,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAU,uCAAG,4BAAAC,EAAA,yDAEG,UAAhBL,GAA2C,KAAhBA,EAFd,uBAGfG,EAAgB,IAChBF,EAAe,IAJA,mDASMP,IAAMG,KAAN,UAjBZ,uCAiBY,SAA6B,CAACS,SAAUN,IAT9C,OASTO,EATS,OAUfJ,EAAgB,GAAD,OAAIH,EAAJ,cAAqBO,EAAOC,KAAKD,SAChDN,EAAeM,EAAOC,KAAKD,QAXZ,kDAafJ,EAAgB,GAAD,OAAIH,EAAJ,aACfC,EAAe,SACoB,MAA/B,KAAEQ,SAASD,KAAKE,WAClBC,MAAM,0BAAD,OAA2B,KAAEF,SAASD,KAAKI,UAEhDD,MAAM,oCAlBO,0DAAH,qDAuBVE,EAAU,SAACC,GACfb,EAAeD,EAAcc,IAY/B,OACE,sBAAKC,UAAU,OAAf,UACE,eAACC,EAAA,EAAD,WACE,+CACA,sBAAMC,KAAK,cAAcC,QAAQ,wBAGnC,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,oBAAIN,UAAU,wBAAd,mCAGJ,cAACK,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAWC,SAAS,OAA1C,SACE,eAACH,EAAA,EAAKI,KAAN,WACE,qBAAKX,UAAU,cAAf,SACE,eAACO,EAAA,EAAKK,KAAN,WACE,cAACC,EAAA,EAAKC,QAAN,CAAcC,KAAK,OAAOC,MAAO7B,EAAca,UAAU,cAAciB,UAAQ,IAC/E,cAACJ,EAAA,EAAKC,QAAN,CAAcC,KAAK,OAAOC,MAAO/B,EAAagC,UAAQ,SAG1D,qBAAKjB,UAAU,eAAf,SACE,eAACO,EAAA,EAAKK,KAAN,WACE,eAACP,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAa,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAjC9ChC,EAAgB,SAChBF,EAAe,KAgCmDmC,QAAQ,oBAA7C,eAA4E,OACzF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAa,cAACC,EAAA,EAAD,CAAQC,QAAS,WA7B9ClC,EAAeD,EAAYqC,MAAM,GAAI,KA6BiCD,QAAQ,oBAAjD,SAAqE,qBAAKE,MAAM,6BAA6Bd,MAAM,KAAKe,OAAO,KAAKC,KAAK,eAAezB,UAAU,yBAAyB0B,QAAQ,YAA9H,SAA0I,sBAAMC,SAAS,UAAUC,EAAE,mJAA8J,OACrZ,eAACtB,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAa,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,UAE3F,eAAChB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,SAAiE,qBAAKE,MAAM,6BAA6Bd,MAAM,KAAKe,OAAO,KAAKC,KAAK,eAAezB,UAAU,UAAU0B,QAAQ,YAA/G,SAA2H,sBAAME,EAAE,wMAAmN,UAEra,eAACvB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,UAE1F,eAAChB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,UAE1F,eAAChB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQ,MAAMuB,QAAQ,oBAA7C,eAA4E,OACxF,eAACf,EAAA,EAAD,CAAKY,GAAI,EAAT,UAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAM/B,KAAcgC,QAAQ,oBAA7C,eAA4E,6BC1F7FQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b75f3470.chunk.js","sourcesContent":["import { Helmet } from \"react-helmet\";\nimport { Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Calc.css\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\nconst apiUrl = \"https://red-loon-48470.herokuapp.com\";\n// const apiUrl = \"http://localhost:8080\";\n\nconst Calc = () => {\n\n  const [currentCalc, setCurrentCalc] = useState(\"\");\n  const [previousCalc, setPreviousCalc] = useState(\"\");\n\n  const handleSend = async () => {\n    // Avoid useless send to api\n    if (currentCalc === 'ERROR' || currentCalc === '') {\n      setPreviousCalc('');\n      setCurrentCalc('');\n      return;\n    }\n\n    try {\n      const result = await axios.post(`${apiUrl}/calc`, {calculus: currentCalc});\n      setPreviousCalc(`${currentCalc} = ${result.data.result}`);\n      setCurrentCalc(result.data.result);\n    } catch (e) {\n      setPreviousCalc(`${currentCalc} = Error`);\n      setCurrentCalc(\"ERROR\");\n      if (e.response.data.statusCode === 422) {\n        alert(`Error during calculus: ${e.response.data.message}`);\n      } else {\n        alert('An un-identified error happened.');\n      }\n    }\n  };\n\n  const addChar = (char) => {\n    setCurrentCalc(currentCalc + char);\n  }\n\n  const resetChars = () => {\n    setPreviousCalc(\"\");\n    setCurrentCalc(\"\");\n  }\n\n  const removeLastChar = () => {\n    setCurrentCalc(currentCalc.slice(0, -1));\n  }\n\n  return (\n    <div className=\"Calc\">\n      <Helmet>\n        <title>Calculator</title>\n        <meta name=\"description\" content=\"Calc application\" />\n      </Helmet>\n\n      <Container>\n        <Row>\n          <Col>\n            <h1 className=\"display-4 text-center\" >Simple calculator</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Card style={{ width: '18rem' }} centered=\"true\">\n            <Card.Body>\n              <div className=\"inputs-body\">\n                <Card.Text>\n                  <Form.Control type=\"text\" value={previousCalc} className=\"shadow-none\" readOnly/>\n                  <Form.Control type=\"text\" value={currentCalc} readOnly/>\n                </Card.Text>\n              </div>\n              <div className=\"buttons-body\">\n                <Card.Text>\n                  <Row>\n                    <Col xs={6} ><Button onClick={() => resetChars()} variant=\"outline-secondary\">C</Button>{' '}</Col>\n                    <Col xs={3} ><Button onClick={() => removeLastChar()} variant=\"outline-secondary\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-arrow-left-short\" viewBox=\"0 0 16 16\"><path fillRule=\"evenodd\" d=\"M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5z\"/></svg></Button>{' '}</Col>\n                    <Col xs={3} ><Button onClick={() => addChar(\"/\")} variant=\"outline-secondary\">/</Button>{' '}</Col>\n                  </Row>\n                  <Row>\n                    <Col xs={3}><Button onClick={() => addChar(\"7\")} variant=\"outline-secondary\">7</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\"8\")} variant=\"outline-secondary\">8</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\"9\")} variant=\"outline-secondary\">9</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\"*\")} variant=\"outline-secondary\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-x\" viewBox=\"0 0 16 16\"><path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/></svg></Button>{' '}</Col>\n                  </Row>\n                  <Row>\n                    <Col xs={3}><Button onClick={() => addChar(\"4\")} variant=\"outline-secondary\">4</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\"5\")} variant=\"outline-secondary\">5</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\"6\")} variant=\"outline-secondary\">6</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\"-\")} variant=\"outline-secondary\">-</Button>{' '}</Col>\n                  </Row>\n                  <Row>\n                    <Col xs={3}><Button onClick={() => addChar(\"1\")} variant=\"outline-secondary\">1</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\"2\")} variant=\"outline-secondary\">2</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\"3\")} variant=\"outline-secondary\">3</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\"+\")} variant=\"outline-secondary\">+</Button>{' '}</Col>\n                  </Row>\n                  <Row>\n                    <Col xs={6}><Button onClick={() => addChar(\"0\")} variant=\"outline-secondary\">0</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => addChar(\".\")} variant=\"outline-secondary\">.</Button>{' '}</Col>\n                    <Col xs={3}><Button onClick={() => handleSend()} variant=\"outline-secondary\">=</Button>{' '}</Col>\n                  </Row>                    \n                </Card.Text>     \n              </div>            \n            </Card.Body>\n          </Card>\n        </Row>\n      </Container>\n\n    </div>\n  );\n}\n\nexport default Calc;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calc from './Calc';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calc />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}